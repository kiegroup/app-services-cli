/*
 * Decision Service Fleet Manager
 *
 * Decision Service Fleet Manager is a Rest API to manage decision instances and connectors.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package decisclient

import (
	"encoding/json"
)

// DecisionRequestAllOfEventing struct for DecisionRequestAllOfEventing
type DecisionRequestAllOfEventing struct {
	Items *[]Eventing `json:"items,omitempty"`
}

// NewDecisionRequestAllOfEventing instantiates a new DecisionRequestAllOfEventing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecisionRequestAllOfEventing() *DecisionRequestAllOfEventing {
	this := DecisionRequestAllOfEventing{}
	return &this
}

// NewDecisionRequestAllOfEventingWithDefaults instantiates a new DecisionRequestAllOfEventing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecisionRequestAllOfEventingWithDefaults() *DecisionRequestAllOfEventing {
	this := DecisionRequestAllOfEventing{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DecisionRequestAllOfEventing) GetItems() []Eventing {
	if o == nil || o.Items == nil {
		var ret []Eventing
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionRequestAllOfEventing) GetItemsOk() (*[]Eventing, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *DecisionRequestAllOfEventing) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Eventing and assigns it to the Items field.
func (o *DecisionRequestAllOfEventing) SetItems(v []Eventing) {
	o.Items = &v
}

func (o DecisionRequestAllOfEventing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableDecisionRequestAllOfEventing struct {
	value *DecisionRequestAllOfEventing
	isSet bool
}

func (v NullableDecisionRequestAllOfEventing) Get() *DecisionRequestAllOfEventing {
	return v.value
}

func (v *NullableDecisionRequestAllOfEventing) Set(val *DecisionRequestAllOfEventing) {
	v.value = val
	v.isSet = true
}

func (v NullableDecisionRequestAllOfEventing) IsSet() bool {
	return v.isSet
}

func (v *NullableDecisionRequestAllOfEventing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecisionRequestAllOfEventing(val *DecisionRequestAllOfEventing) *NullableDecisionRequestAllOfEventing {
	return &NullableDecisionRequestAllOfEventing{value: val, isSet: true}
}

func (v NullableDecisionRequestAllOfEventing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecisionRequestAllOfEventing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
