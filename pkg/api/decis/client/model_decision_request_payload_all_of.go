/*
 * Decision Service Fleet Manager
 *
 * Decision Service Fleet Manager is a Rest API to manage decision instances and connectors.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package decisclient

import (
	"encoding/json"
)

// DecisionRequestPayloadAllOf Schema for the request body sent to /decisions POST
type DecisionRequestPayloadAllOf struct {
	// The name of the Decision cluster. It must consist of lower-case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character, and can not be longer than 32 characters.
	Name          string                           `json:"name"`
	Description   string                           `json:"description"`
	Model         DecisionRequestPayloadAllOfModel `json:"model"`
	Eventing      *DecisionRequestAllOfEventing    `json:"eventing,omitempty"`
	Configuration *map[string]string               `json:"configuration,omitempty"`
	Tags          *map[string]string               `json:"tags,omitempty"`
}

// NewDecisionRequestPayloadAllOf instantiates a new DecisionRequestPayloadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecisionRequestPayloadAllOf(name string, description string, model DecisionRequestPayloadAllOfModel) *DecisionRequestPayloadAllOf {
	this := DecisionRequestPayloadAllOf{}
	this.Name = name
	this.Description = description
	this.Model = model
	return &this
}

// NewDecisionRequestPayloadAllOfWithDefaults instantiates a new DecisionRequestPayloadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecisionRequestPayloadAllOfWithDefaults() *DecisionRequestPayloadAllOf {
	this := DecisionRequestPayloadAllOf{}
	return &this
}

// GetName returns the Name field value
func (o *DecisionRequestPayloadAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DecisionRequestPayloadAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *DecisionRequestPayloadAllOf) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DecisionRequestPayloadAllOf) SetDescription(v string) {
	o.Description = v
}

// GetModel returns the Model field value
func (o *DecisionRequestPayloadAllOf) GetModel() DecisionRequestPayloadAllOfModel {
	if o == nil {
		var ret DecisionRequestPayloadAllOfModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetModelOk() (*DecisionRequestPayloadAllOfModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *DecisionRequestPayloadAllOf) SetModel(v DecisionRequestPayloadAllOfModel) {
	o.Model = v
}

// GetEventing returns the Eventing field value if set, zero value otherwise.
func (o *DecisionRequestPayloadAllOf) GetEventing() DecisionRequestAllOfEventing {
	if o == nil || o.Eventing == nil {
		var ret DecisionRequestAllOfEventing
		return ret
	}
	return *o.Eventing
}

// GetEventingOk returns a tuple with the Eventing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetEventingOk() (*DecisionRequestAllOfEventing, bool) {
	if o == nil || o.Eventing == nil {
		return nil, false
	}
	return o.Eventing, true
}

// HasEventing returns a boolean if a field has been set.
func (o *DecisionRequestPayloadAllOf) HasEventing() bool {
	if o != nil && o.Eventing != nil {
		return true
	}

	return false
}

// SetEventing gets a reference to the given DecisionRequestAllOfEventing and assigns it to the Eventing field.
func (o *DecisionRequestPayloadAllOf) SetEventing(v DecisionRequestAllOfEventing) {
	o.Eventing = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *DecisionRequestPayloadAllOf) GetConfiguration() map[string]string {
	if o == nil || o.Configuration == nil {
		var ret map[string]string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetConfigurationOk() (*map[string]string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *DecisionRequestPayloadAllOf) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]string and assigns it to the Configuration field.
func (o *DecisionRequestPayloadAllOf) SetConfiguration(v map[string]string) {
	o.Configuration = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DecisionRequestPayloadAllOf) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayloadAllOf) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DecisionRequestPayloadAllOf) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *DecisionRequestPayloadAllOf) SetTags(v map[string]string) {
	o.Tags = &v
}

func (o DecisionRequestPayloadAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["model"] = o.Model
	}
	if o.Eventing != nil {
		toSerialize["eventing"] = o.Eventing
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableDecisionRequestPayloadAllOf struct {
	value *DecisionRequestPayloadAllOf
	isSet bool
}

func (v NullableDecisionRequestPayloadAllOf) Get() *DecisionRequestPayloadAllOf {
	return v.value
}

func (v *NullableDecisionRequestPayloadAllOf) Set(val *DecisionRequestPayloadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDecisionRequestPayloadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDecisionRequestPayloadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecisionRequestPayloadAllOf(val *DecisionRequestPayloadAllOf) *NullableDecisionRequestPayloadAllOf {
	return &NullableDecisionRequestPayloadAllOf{value: val, isSet: true}
}

func (v NullableDecisionRequestPayloadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecisionRequestPayloadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
