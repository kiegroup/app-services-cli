/*
 * Decision Service Fleet Manager
 *
 * Decision Service Fleet Manager is a Rest API to manage decision instances and connectors.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package decisclient

import (
	"encoding/json"
)

// DecisionRequestPayload Schema for the request body sent to /decisions POST
type DecisionRequestPayload struct {
	// The name of the Decision cluster. It must consist of lower-case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character, and can not be longer than 32 characters.
	Name string `json:"name"`
}

// NewDecisionRequestPayload instantiates a new DecisionRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecisionRequestPayload(name string) *DecisionRequestPayload {
	this := DecisionRequestPayload{}
	this.Name = name
	return &this
}

// NewDecisionRequestPayloadWithDefaults instantiates a new DecisionRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecisionRequestPayloadWithDefaults() *DecisionRequestPayload {
	this := DecisionRequestPayload{}
	return &this
}

// GetName returns the Name field value
func (o *DecisionRequestPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DecisionRequestPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DecisionRequestPayload) SetName(v string) {
	o.Name = v
}

func (o DecisionRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableDecisionRequestPayload struct {
	value *DecisionRequestPayload
	isSet bool
}

func (v NullableDecisionRequestPayload) Get() *DecisionRequestPayload {
	return v.value
}

func (v *NullableDecisionRequestPayload) Set(val *DecisionRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDecisionRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDecisionRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecisionRequestPayload(val *DecisionRequestPayload) *NullableDecisionRequestPayload {
	return &NullableDecisionRequestPayload{value: val, isSet: true}
}

func (v NullableDecisionRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecisionRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
