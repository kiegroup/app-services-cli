/*
 * Service Registry Service - Fleet Manager - v1
 *
 * Main entry point for the system, responsible for all sorts of management operations for the whole service of managed service registry.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kasclient

import (
	"encoding/json"
)

// RegistryDeploymentCreate Information used to create (register) a new multi-tenant Service Registry deployment, that can host Service Registry instances.
type RegistryDeploymentCreate struct {
	RegistryDeploymentUrl string `json:"registryDeploymentUrl"`
	TenantManagerUrl string `json:"tenantManagerUrl"`
	// User-defined Registry Deployment name. Does not have to be unique.
	Name *string `json:"name,omitempty"`
}

// NewRegistryDeploymentCreate instantiates a new RegistryDeploymentCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryDeploymentCreate(registryDeploymentUrl string, tenantManagerUrl string) *RegistryDeploymentCreate {
	this := RegistryDeploymentCreate{}
	this.RegistryDeploymentUrl = registryDeploymentUrl
	this.TenantManagerUrl = tenantManagerUrl
	return &this
}

// NewRegistryDeploymentCreateWithDefaults instantiates a new RegistryDeploymentCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryDeploymentCreateWithDefaults() *RegistryDeploymentCreate {
	this := RegistryDeploymentCreate{}
	return &this
}

// GetRegistryDeploymentUrl returns the RegistryDeploymentUrl field value
func (o *RegistryDeploymentCreate) GetRegistryDeploymentUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistryDeploymentUrl
}

// GetRegistryDeploymentUrlOk returns a tuple with the RegistryDeploymentUrl field value
// and a boolean to check if the value has been set.
func (o *RegistryDeploymentCreate) GetRegistryDeploymentUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RegistryDeploymentUrl, true
}

// SetRegistryDeploymentUrl sets field value
func (o *RegistryDeploymentCreate) SetRegistryDeploymentUrl(v string) {
	o.RegistryDeploymentUrl = v
}

// GetTenantManagerUrl returns the TenantManagerUrl field value
func (o *RegistryDeploymentCreate) GetTenantManagerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantManagerUrl
}

// GetTenantManagerUrlOk returns a tuple with the TenantManagerUrl field value
// and a boolean to check if the value has been set.
func (o *RegistryDeploymentCreate) GetTenantManagerUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TenantManagerUrl, true
}

// SetTenantManagerUrl sets field value
func (o *RegistryDeploymentCreate) SetTenantManagerUrl(v string) {
	o.TenantManagerUrl = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RegistryDeploymentCreate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryDeploymentCreate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RegistryDeploymentCreate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RegistryDeploymentCreate) SetName(v string) {
	o.Name = &v
}

func (o RegistryDeploymentCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["registryDeploymentUrl"] = o.RegistryDeploymentUrl
	}
	if true {
		toSerialize["tenantManagerUrl"] = o.TenantManagerUrl
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryDeploymentCreate struct {
	value *RegistryDeploymentCreate
	isSet bool
}

func (v NullableRegistryDeploymentCreate) Get() *RegistryDeploymentCreate {
	return v.value
}

func (v *NullableRegistryDeploymentCreate) Set(val *RegistryDeploymentCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryDeploymentCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryDeploymentCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryDeploymentCreate(val *RegistryDeploymentCreate) *NullableRegistryDeploymentCreate {
	return &NullableRegistryDeploymentCreate{value: val, isSet: true}
}

func (v NullableRegistryDeploymentCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryDeploymentCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


